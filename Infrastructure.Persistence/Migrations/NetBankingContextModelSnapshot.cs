// <auto-generated />
using System;
using Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(NetBankingContext))]
    partial class NetBankingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Domain.Entities.Beneficiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountBeneficiary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Beneficiary");
                });

            modelBuilder.Entity("Core.Domain.Entities.CreditCard", b =>
                {
                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Debt")
                        .HasColumnType("float");

                    b.Property<double>("Limit")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardNumber");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("Core.Domain.Entities.Loans", b =>
                {
                    b.Property<string>("Loan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Debt")
                        .HasColumnType("float");

                    b.Property<double>("Limit")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Loan");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("Core.Domain.Entities.SavingsAccount", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountNumber");

                    b.ToTable("SavingsAccounts");
                });

            modelBuilder.Entity("Core.Domain.Entities.Transations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditCardCardNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoansLoan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SavingsAccountAccountNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserToPayAccount")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreditCardCardNumber");

                    b.HasIndex("LoansLoan");

                    b.HasIndex("SavingsAccountAccountNumber");

                    b.ToTable("Transations");
                });

            modelBuilder.Entity("Core.Domain.Entities.Transations", b =>
                {
                    b.HasOne("Core.Domain.Entities.CreditCard", "CreditCard")
                        .WithMany("Transations")
                        .HasForeignKey("CreditCardCardNumber");

                    b.HasOne("Core.Domain.Entities.Loans", "Loans")
                        .WithMany("Transations")
                        .HasForeignKey("LoansLoan");

                    b.HasOne("Core.Domain.Entities.SavingsAccount", "SavingsAccount")
                        .WithMany("Transations")
                        .HasForeignKey("SavingsAccountAccountNumber");

                    b.Navigation("CreditCard");

                    b.Navigation("Loans");

                    b.Navigation("SavingsAccount");
                });

            modelBuilder.Entity("Core.Domain.Entities.CreditCard", b =>
                {
                    b.Navigation("Transations");
                });

            modelBuilder.Entity("Core.Domain.Entities.Loans", b =>
                {
                    b.Navigation("Transations");
                });

            modelBuilder.Entity("Core.Domain.Entities.SavingsAccount", b =>
                {
                    b.Navigation("Transations");
                });
#pragma warning restore 612, 618
        }
    }
}
